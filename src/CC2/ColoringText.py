# -*- coding: utf-8 -*-
"""CC2_ColoringText.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dBia9mAoxbnfnUTXdcDMYmXQ2R7TLdoY
"""

# Recondo, Juan Miguel V.
# CITCS 1-O

try:
  import colorful as cf
except:
  !pip3 install colorful

import colorful as cf
cf.update_palette({
    "indigo": "#4B0082",
})

def list_is_empty(lst):
    return lst == []

def print_line_break(length):
    print("-"*length)

def print_home_interface(length):
    print("[Welcome to JM's Coloring App!]".center(length,"="))
    print(f"""Options:
[1] Color an Object
[2] Print Colored Objects
[3] Delete an Object
[4] Quit the Application""")

def print_color_selection():
    print("Red | Orange | Yellow | Green | Blue | Indigo | Violet")

def is_invalid_color(color, color_palette):
    return color not in color_palette

def is_last_key(key, objects):
    return key == objects[-1]

color_palette = {
    "Red": cf.red,
    "Orange": cf.orange,
    "Yellow": cf.yellow,
    "Green": cf.green,
    "Blue": cf.blue,
    "Indigo": cf.indigo,
    "Violet": cf.violet,
}
def colored(object_name, color_name):
    return color_palette[color_name](object_name)

objects = []
colors = ()
color_of_object = {}

user_wants_to_use_application = True
while user_wants_to_use_application:
    print_line_break(length=50)
    print_home_interface(length=50)
    choice = input("Enter your choice [1-4]: ")
    match choice:
        case "1":
            object_name = input("Enter the name of the object that you want to color: ")
            while True:
                print_color_selection()
                color_name = input("Choose a color from the colors above: ")
                if is_invalid_color(color_name, color_palette.keys()):
                    print("[ERROR] Invalid choice. Please try again.\n")
                    continue
                else:
                    print(f"[RESPONSE] {object_name} is now colored {colored(color_name, color_name)}!\n")
                    color_of_object[object_name] = color_name
                    objects.append(object_name)
                    colors += (color_name,)
                    break
        case "2":
            if list_is_empty(objects):
                print("[ERROR] There are no objects to print!\n")
                continue

            print("\n[RESPONSE]\nColored Objects:")
            count = 1
            for key, value in color_of_object.items():
                print(f"{count}. {colored(key, value)} is colored {colored(value, value)}")
                if is_last_key(key, objects):
                    print()

                count += 1
        case "3":
            if list_is_empty(objects):
                print("[ERROR] There are no objects to delete!\n")
                continue

            while True:
                object_name = input("Enter the name of the object that you want to delete: ")
                try:
                    del color_of_object[object_name]

                    index = objects.index(object_name)
                    del objects[index]

                    colors = list(colors)
                    del colors[index]
                    colors = tuple(colors)

                    print(f"[RESPONSE] {object_name} has been deleted!\n")
                    break
                except:
                    print("[ERROR] Object does not exist! Please try again.\n")
                    continue
        case "4":
            user_wants_to_use_application = False
        case _:
            print("[ERROR] Invalid choice. Please try again.\n")

print("[RESPONSE] You have now exited the application. Have a nice day ahead!")
